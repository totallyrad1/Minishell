ls ><""
echo $''USER

cat <<$USER
here_doc> $PWD
here_doc> $HOME
here_doc> "$USER"
here_doc> '$HOME'
here_doc> $USER
/Users/ymahni/Desktop/shellmini
/Users/ymahni
"ymahniPymahniPymaï¿½ï¿½ï¿½
'/Users/ymahniP/UPP


cat <<$USER'    '>h|>ls --->fixed
<< --->fixed
> ii > oo >N<f --->fixed
ls -la | wc -l | >> file | << file1 --> fixed
> file | > file ---> fixed
echo '"'$USER'"' ---> fixed
> l    |      |      > l ---> fixed
$var"H" fgdfg fdg $var fgdfg "$PWD dsf" $df "ss"$var"ss" | ===> fixed
ls              |>>     ld ---> fixed
gjm | > dfg === > fixed
ls > "" | ls | "" ---> fixed
echo '"$USER"'   =========> fixed
ls -la|l        =========> fixed
ls "-la" ''
ls -la | wc -la >> file    ====> fixed
la -l | "grep Makefile"  | wc -l    ==> fixed

| -> | error    --> fixed
> -> | error    ---> fixed
> !-> WORD ERROR ---> fixed
| 1 -> error    -->fixed
<< $PWD ---> fixed
$"PWD" ---> fixed
"$PWD $" ---> fixed
"$PWD $PATH $" ---> fixed
"|$USER$PWD$PWD$PWD$PWD|" ----> fixed
"$PWD $PATH" --> fixed
"$dsgadg" --> fixed
l"s"  -"l"a ---> fixed
'l's "-"l'a''' ---> fixed
"ls ""-la" ---> fixed
$PWD$PWD$ | dsf""|''ls  ---> fixed
"'''" $$$$$PWD "'''"  ---> fixed
$ first --> _ or alphabetic


should be handle in tomorrow ðŸ˜€
------------
| ctrl + c |
| ctrl + d |
| ctrl + \ |
------------

ls -la > out libft ../
ls > out1 > out2 > out3 -la
cat < minlllishell.h
< Makefile > outfile0 ls >> outfile1 < outfile0 -a >> Makefile -l << here -ghj > outfile2
ls>out -a>out -l>>out




cd '/////' >/dev/null
cd "$PWD/directory"
cd $PWD/directory
cd $OLDPWD/directory
cd ?
echo "-n -n -n"-n nenie_iri

|----------------------- fixed -------------------------------------|
|echo "nenie_iri"   "$USER"    "$USER"                              |
|echo $USER'$USER'text oui oui     oui  oui $USER oui      $USER '' | ==> err in export
|echo ' \' ' \'                                                     | 
|echo $USER '' $USER $USER '' $USER '' $USER -n $USER               | ==> SIGV in export
|-------------------------------------------------------------------|

expander
joiner

parser
execution etape


cd '/////' >/dev/null
cd $OLDPWD/directory

// handel segfault whene run ls |>

-> minishell$ ls | asf | adsf | asrah | nawer | iaiei | echo file
file
mmiinniisshheellll::  aisariaehi::  ccoommmmaanndd  nnoott  ffoouunndd

minishell: adsf: command not found
minishell: asf: command not found
minishell: nawer: command not found

<build_in_command> > output_file


exit 42 world

exit -- -- 42

echo "exit_code ->$? user ->$USER home -> $HOME"
echo $?HELLO

/////////////////////////////////////////////
# ENV EXPANSIONS
ENV_SHOW="env | sort | grep -v SHLVL | grep -v _="
EXPORT_SHOW="export | sort | grep -v SHLVL | grep -v _= | grep -v OLDPWD"
exec_test 'export ='
exec_test 'export 1TEST= ;' $ENV_SHOW
exec_test 'export TEST ;' $EXPORT_SHOW
exec_test 'export ""="" ; ' $ENV_SHOW
exec_test 'export TES=T="" ;' $ENV_SHOW
exec_test 'export TE+S=T="" ;' $ENV_SHOW
exec_test 'export TEST=LOL ; echo $TEST ;' $ENV_SHOW
exec_test 'export TEST=LOL ; echo $TEST$TEST$TEST=lol$TEST'
exec_test 'export TEST=LOL; export TEST+=LOL ; echo $TEST ;' $ENV_SHOW
exec_test $ENV_SHOW
exec_test $EXPORT_SHOW
exec_test 'export TEST="ls       -l     - a" ; echo $TEST ; $LS ; ' $ENV_SHOW

/////////////////////////////////////////////////////

# REDIRECTIONS
exec_test 'echo test > ls ; cat ls'
exec_test 'echo test > ls >> ls >> ls ; echo test >> ls; cat ls'
exec_test '> lol echo test lol; cat lol'
exec_test '>lol echo > test>lol>test>>lol>test mdr >lol test >test; cat test'
exec_test 'cat < ls'
exec_test 'cat < ls > ls'

///////////////////////////////////////////////////////////
exit 123
exit 298
exit +100
exit "+100"
exit +"100"
exit -100
exit "-100"
exit -"100"
exit hello
exit 42 world
exit 9223372036854775807
exit 9223372036854775808
exit -9223372036854775807
exit -9223372036854775808
exit -9223372036854775809

exit 0 0
exit 42 42
exit -42 -24
exit 42
exit 42 53 68
exit 259
exit -12030
exit --1239312
exit ++++1203020103
exit +0
exit ++++++0
exit -----0
exit azerty
exit kewkwqke
exit a
exit z
exit "1"
exit "2"
exit "+102"
exit "1230"
exit "+++1230"
exit "1"23
exit "2"32"32"
exit "'42'"
exit '42'"42"42
exit +'42'"42"42
exit -'42'"42"42
exit 9223372036854775807
exit 9223372036854775808
exit -4
exit wrong
exit wrong_command 
exit something
exit 1 
exit -1 
exit 42 
exit 0 
exit --000 
exit +++++++000 
exit ++++3193912939 
exit ---31232103012 
exit "something" 
exit q 
exit help 
exit export 
exit echo 
exit cd .. 
exit 0 0 
exit something somethingv2 
exit 42 42 42 42 42 
exit echo something 
exit exit 

///////////////////////////////////////////////////////////
cat <<HEREDOC
oi
HEREDOC

cat <<HERE <<DOC
oi
HERE
time
DOC

cat <<HERE | ls // OK
oi
HERE

cat <<HERE // OK
$USER
oi
HERE

cat <include/minishell.h <<HERE <missing | ls // OK
HERE

cat < include/minishell.h << HERE | cat // OK
HERE

cat < include/minishell.h << HERE < missing << DOC | echo oi // OK
HERE
DOC

cat << $
oi
$

<< echo oi
echo
//////////////////////////////////////////////////////////////////////

echo - "" "  " hello // segv
//////////////////////////////////////////////////////////////////////

CTRL+C
CTRL+D
CTRL+\
CTRL+C, CTRL+C, CTRL+C, exit
CTRL+C, CTRL+C, CTRL+C, Ctrl+D

cat | ls # testar dando depois:
#- Enter
#- Ctrl+D
#- Ctrl+\
#- Ctrl+C

grep oi | ls # testar dando depois:
#- Enter + Ctrl+D
#- Ctrl+D
#- "oi" + Enter + Ctrl+D
#- Ctrl+\
#- Ctrl+C
#- "oi" + Enter + Ctrl+\

./test_files/loop.out # finalizar com:
#- Ctrl+C
#- Ctrl+\  -> workspaces: ^\Quit\n
#- Ctrl+D  -> nÃ£o faz nada

./test_files/loop.out | ls
# finalizar com:
#- Ctrl+C
#- Ctrl+\
#- Ctrl+D

ls | ./test_files/loop.out
# finalizar com:
#- Ctrl+C
#- Ctrl+\
#- Ctrl+D

hello + Ctrl+C
# Check that the new line is empty


 // if (cmd->cmds[i][0] == '\0')
                // {
                //      i++;
                //      continue ;
                // }                          // segv
# cat << e < Makefile  > out
# ls ''
# ls ""

cat < Makefile | wc -l ""

// export test
- Export part : For next tests, you will need : \\\033[0;33munset, env, echo, pipes, execve and semicolons (;).
env | grep "_="
export | grep "SHLVL"
export | grep "OLDPWD"
export | grep "PWD"
export $? 
export TEST
export TEST=
export TEST=123
export ___TEST=123
export --TEST=123
export ""=""
export ''=''
export "="="="
export '='='='
export TE\\\ST=100
export TE-ST=100
export -TEST=100
export TEST-=100
export _TEST=100
export | grep "SHLVL"
export TEST
export ==========
export 1TEST=
export TEST
export ""=""
export TES=T=""
export TE+S=T=""
export TES\\\\T=123
export TES.T=123
export TES\\\$T=123
export TES\\\\T
export TES.T=123
export TES+T=123
export TES=T=123
export TES}T=123
export TES{T=123
export TES-T=123
export -TEST=123
export _TEST=123
export TES_T=123
export TEST_=123
export TE*ST=123
export TES#T=123
export TES@T=123
export TES!T=123
export TES$?T=123
export =============123
export +++++++=123
export ________=123
export export
export echo
export pwd
export cd
export export
export unset
export sudo
export TES^T=123
export TES!T=123
export TES\~T=123
export TEST+=100
export with quotes // segv
 emty string should be print command not found !!!
 << here < Makefile grep print | cat > fu | ls -al >> fu | << lim << lim2 grep 13 >> fu | ls -la > fu  //leaks

 ls -la > out | < Makefile wc -l >> out | grep main << end > out1 | echo "$PWD"$USER"Hello World"

|-----------------------------------------------|
| small error in expand in herdoc >> $USER$USER |
|-----------------------------------------------|

export a+=
export with dquote --> segv in multiple times
 minishell$ export a+=12
arg = a+
-> minishell$ export a+===========12
arg = a+
-> minishell$ export a++++++++===+===========12
arg = a++++++++
minishell: env: `a++++++++===+===========12': not a valid identifier
-> minishell$ export TEST=
arg = TEST
-> minishell$ export TE+S
arg = TE+S
-> minishell$ export TE*ST=123
arg = TE*ST
-> minishell$ export TE*ST+=123
arg = TE*ST+
-> minishell$ 
 exit

cat $dsf

ls -l >> file | cat << file


-> minishell$ << end << end | grep hello | haha| sleep 2
> HEREDOC$ end
> HEREDOC$ end
minishell: : command not found
minishell: haha: command not found

-> minishell$ << file >> outfile | grep hello
> HEREDOC$ 
-> minishell$ < file >> outfile | grep hello
minishell: file: No such file or directory ===> file gets created even if the command is not found
signal(SIGINT, SIG_IGN) // segv);




export > out | << end > out | cat out

 unset ++++++
export HOME should not change the variable

exit 4 44f
exit
minishell: exit: too many argument // should not exit in  this case


SHELVL:
default >> 2
max 1000
letter=> 1
negative value >> 0
export with -=
